INFO  16:26:07,976 - Compiling source file: D:\pp1Projekat\workspace\MJCompiler\test\program.mj
INFO  16:26:08,012 - #8 program
INFO  16:26:08,013 - #5 p
INFO  16:26:08,013 - #12 const
INFO  16:26:08,013 - #5 int
INFO  16:26:08,013 - #5 size
INFO  16:26:08,014 - #37 =
INFO  16:26:08,014 - #2 10
INFO  16:26:08,014 - #40 ;
INFO  16:26:08,014 - #10 class
INFO  16:26:08,014 - #5 Table
INFO  16:26:08,014 - #48 {
INFO  16:26:08,015 - #5 int
INFO  16:26:08,015 - #5 pos
INFO  16:26:08,015 - #46 [
INFO  16:26:08,016 - #47 ]
INFO  16:26:08,016 - #42 ,
INFO  16:26:08,016 - #5 neg
INFO  16:26:08,016 - #46 [
INFO  16:26:08,016 - #47 ]
INFO  16:26:08,016 - #42 ,
INFO  16:26:08,016 - #5 factor
INFO  16:26:08,016 - #40 ;
INFO  16:26:08,018 - #48 {
INFO  16:26:08,019 - #19 void
INFO  16:26:08,019 - #5 putp
INFO  16:26:08,019 - #44 (
INFO  16:26:08,019 - #5 int
INFO  16:26:08,020 - #5 a
INFO  16:26:08,020 - #42 ,
INFO  16:26:08,020 - #5 int
INFO  16:26:08,020 - #5 idx
INFO  16:26:08,020 - #45 )
INFO  16:26:08,020 - #48 {
INFO  16:26:08,021 - #5 pos
INFO  16:26:08,021 - #46 [
INFO  16:26:08,021 - #5 idx
INFO  16:26:08,021 - #47 ]
INFO  16:26:08,021 - #37 =
INFO  16:26:08,021 - #5 a
INFO  16:26:08,022 - #40 ;
INFO  16:26:08,022 - #49 }
INFO  16:26:08,022 - #19 void
INFO  16:26:08,023 - #5 putn
INFO  16:26:08,023 - #44 (
INFO  16:26:08,023 - #5 int
INFO  16:26:08,023 - #5 a
INFO  16:26:08,023 - #42 ,
INFO  16:26:08,023 - #5 int
INFO  16:26:08,023 - #5 idx
INFO  16:26:08,023 - #45 )
INFO  16:26:08,023 - #48 {
INFO  16:26:08,023 - #22 this
ERROR 16:26:08,023 - 
Sintaksna greska na liniji 7
INFO  16:26:08,023 - #43 .
INFO  16:26:08,023 - #5 neg
INFO  16:26:08,023 - #46 [
INFO  16:26:08,024 - #5 idx
INFO  16:26:08,024 - #47 ]
INFO  16:26:08,024 - #37 =
INFO  16:26:08,024 - #5 a
INFO  16:26:08,024 - #40 ;
INFO  16:26:08,024 - #49 }
INFO  16:26:08,024 - #5 int
INFO  16:26:08,024 - #5 getp
INFO  16:26:08,024 - #44 (
INFO  16:26:08,024 - #5 int
INFO  16:26:08,025 - #5 idx
INFO  16:26:08,025 - #45 )
INFO  16:26:08,025 - #48 {
INFO  16:26:08,026 - #18 return
INFO  16:26:08,026 - #5 pos
ERROR 16:26:08,026 - Izvrsen oporavak od greske u deklaraciji formalnog parametra do , ili ). Greska je u liniji 7
INFO  16:26:08,027 - #46 [
INFO  16:26:08,027 - #5 idx
INFO  16:26:08,027 - #47 ]
INFO  16:26:08,027 - #40 ;
INFO  16:26:08,027 - #49 }
INFO  16:26:08,027 - #5 int
INFO  16:26:08,027 - #5 getn
INFO  16:26:08,027 - #44 (
INFO  16:26:08,027 - #5 int
INFO  16:26:08,027 - #5 idx
INFO  16:26:08,027 - #45 )
INFO  16:26:08,027 - #48 {
INFO  16:26:08,027 - #18 return
INFO  16:26:08,027 - #5 neg
INFO  16:26:08,027 - #46 [
INFO  16:26:08,027 - #5 idx
INFO  16:26:08,028 - #47 ]
INFO  16:26:08,028 - #40 ;
INFO  16:26:08,028 - #49 }
INFO  16:26:08,028 - #49 }
INFO  16:26:08,028 - #49 }
INFO  16:26:08,028 - #5 Table
INFO  16:26:08,028 - #5 val
INFO  16:26:08,028 - #40 ;
INFO  16:26:08,029 - #5 Int
INFO  16:26:08,029 - #5 rows
INFO  16:26:08,029 - #42 ,
INFO  16:26:08,029 - #5 columns
INFO  16:26:08,029 - #40 ;
INFO  16:26:08,029 - #48 {
INFO  16:26:08,029 - #19 void
INFO  16:26:08,030 - #5 f
INFO  16:26:08,030 - #44 (
INFO  16:26:08,030 - #5 char
INFO  16:26:08,030 - #5 ch
INFO  16:26:08,030 - #42 ,
INFO  16:26:08,030 - #5 int
INFO  16:26:08,030 - #5 a
INFO  16:26:08,030 - #42 ,
INFO  16:26:08,030 - #5 int
INFO  16:26:08,030 - #5 arg
INFO  16:26:08,030 - #45 )
INFO  16:26:08,030 - #5 int
INFO  16:26:08,030 - #5 x
INFO  16:26:08,030 - #40 ;
INFO  16:26:08,030 - #48 {
INFO  16:26:08,030 - #5 x
INFO  16:26:08,030 - #37 =
INFO  16:26:08,031 - #5 arg
INFO  16:26:08,031 - #40 ;
INFO  16:26:08,031 - #49 }
INFO  16:26:08,031 - #19 void
INFO  16:26:08,031 - #5 main
INFO  16:26:08,031 - #44 (
INFO  16:26:08,031 - #45 )
INFO  16:26:08,032 - #5 int
INFO  16:26:08,032 - #5 x
INFO  16:26:08,032 - #42 ,
INFO  16:26:08,032 - #5 i
INFO  16:26:08,032 - #40 ;
INFO  16:26:08,032 - #5 char
INFO  16:26:08,032 - #5 c
INFO  16:26:08,032 - #42 ,
INFO  16:26:08,032 - #5 int
INFO  16:26:08,032 - #5 arr
ERROR 16:26:08,032 - 
Sintaksna greska na liniji 20
INFO  16:26:08,032 - #46 [
INFO  16:26:08,032 - #47 ]
INFO  16:26:08,032 - #40 ;
INFO  16:26:08,032 - #48 {
INFO  16:26:08,033 - #5 val
INFO  16:26:08,033 - #37 =
ERROR 16:26:08,033 - Izvrsen oporavak od greske u definiciji globalne promenljive do , ili ;. Greska je u liniji 20
INFO  16:26:08,034 - #15 new
INFO  16:26:08,034 - #5 Table
INFO  16:26:08,034 - #44 (
INFO  16:26:08,035 - #2 2
INFO  16:26:08,035 - #45 )
INFO  16:26:08,035 - #40 ;
INFO  16:26:08,035 - #5 arr
INFO  16:26:08,035 - #37 =
INFO  16:26:08,035 - #15 new
INFO  16:26:08,035 - #5 int
INFO  16:26:08,035 - #46 [
INFO  16:26:08,035 - #2 3
INFO  16:26:08,035 - #47 ]
INFO  16:26:08,035 - #40 ;
INFO  16:26:08,035 - #5 i
INFO  16:26:08,035 - #37 =
INFO  16:26:08,036 - #2 0
INFO  16:26:08,036 - #40 ;
INFO  16:26:08,036 - #14 while
INFO  16:26:08,036 - #44 (
INFO  16:26:08,036 - #5 i
INFO  16:26:08,036 - #33 <
INFO  16:26:08,036 - #2 3
INFO  16:26:08,036 - #45 )
INFO  16:26:08,037 - #48 {
INFO  16:26:08,037 - #5 arr
INFO  16:26:08,037 - #46 [
INFO  16:26:08,037 - #5 i
INFO  16:26:08,037 - #47 ]
INFO  16:26:08,037 - #37 =
INFO  16:26:08,037 - #5 i
INFO  16:26:08,037 - #40 ;
INFO  16:26:08,037 - #5 i
ERROR 16:26:08,037 - 
Sintaksna greska na liniji 27
INFO  16:26:08,037 - #38 ++
INFO  16:26:08,038 - #40 ;
INFO  16:26:08,038 - #49 }
INFO  16:26:08,038 - #5 arr
INFO  16:26:08,038 - #43 .
INFO  16:26:08,038 - #23 foreach
INFO  16:26:08,038 - #44 (
INFO  16:26:08,038 - #5 x
INFO  16:26:08,038 - #50 =>
INFO  16:26:08,038 - #16 print
INFO  16:26:08,038 - #44 (
INFO  16:26:08,038 - #5 x
INFO  16:26:08,038 - #45 )
INFO  16:26:08,038 - #40 ;
INFO  16:26:08,038 - #45 )
INFO  16:26:08,038 - #40 ;
INFO  16:26:08,038 - #5 val
INFO  16:26:08,038 - #43 .
INFO  16:26:08,038 - #5 pos
INFO  16:26:08,038 - #37 =
INFO  16:26:08,038 - #15 new
INFO  16:26:08,038 - #5 int
INFO  16:26:08,038 - #46 [
INFO  16:26:08,038 - #5 size
INFO  16:26:08,038 - #47 ]
INFO  16:26:08,038 - #40 ;
INFO  16:26:08,039 - #5 val
INFO  16:26:08,039 - #43 .
INFO  16:26:08,039 - #5 neg
INFO  16:26:08,039 - #37 =
INFO  16:26:08,039 - #15 new
INFO  16:26:08,039 - #5 int
INFO  16:26:08,039 - #46 [
INFO  16:26:08,039 - #5 size
INFO  16:26:08,039 - #47 ]
INFO  16:26:08,039 - #40 ;
INFO  16:26:08,039 - #17 read
INFO  16:26:08,039 - #44 (
INFO  16:26:08,039 - #5 x
INFO  16:26:08,039 - #45 )
INFO  16:26:08,039 - #40 ;
INFO  16:26:08,039 - #46 [
INFO  16:26:08,039 - #5 i
INFO  16:26:08,039 - #42 ,
INFO  16:26:08,039 - #42 ,
INFO  16:26:08,039 - #5 x
INFO  16:26:08,039 - #47 ]
INFO  16:26:08,039 - #37 =
INFO  16:26:08,039 - #5 arr
INFO  16:26:08,039 - #40 ;
INFO  16:26:08,039 - #14 while
INFO  16:26:08,039 - #44 (
INFO  16:26:08,039 - #5 i
INFO  16:26:08,039 - #33 <
INFO  16:26:08,039 - #5 size
INFO  16:26:08,039 - #45 )
INFO  16:26:08,039 - #48 {
INFO  16:26:08,039 - #5 val
INFO  16:26:08,039 - #43 .
INFO  16:26:08,039 - #5 putp
INFO  16:26:08,039 - #44 (
INFO  16:26:08,039 - #2 0
INFO  16:26:08,039 - #42 ,
INFO  16:26:08,039 - #5 i
INFO  16:26:08,040 - #45 )
INFO  16:26:08,040 - #40 ;
INFO  16:26:08,040 - #5 val
INFO  16:26:08,040 - #43 .
INFO  16:26:08,040 - #5 putn
INFO  16:26:08,040 - #44 (
INFO  16:26:08,040 - #2 0
INFO  16:26:08,040 - #42 ,
INFO  16:26:08,040 - #5 i
INFO  16:26:08,040 - #45 )
INFO  16:26:08,040 - #40 ;
INFO  16:26:08,040 - #5 i
INFO  16:26:08,040 - #38 ++
INFO  16:26:08,040 - #40 ;
INFO  16:26:08,040 - #49 }
INFO  16:26:08,040 - #5 f
INFO  16:26:08,040 - #44 (
INFO  16:26:08,040 - #5 c
INFO  16:26:08,040 - #42 ,
INFO  16:26:08,040 - #5 x
INFO  16:26:08,040 - #42 ,
INFO  16:26:08,040 - #5 i
INFO  16:26:08,040 - #45 )
INFO  16:26:08,040 - #40 ;
INFO  16:26:08,040 - #17 read
INFO  16:26:08,041 - #44 (
INFO  16:26:08,041 - #5 rows
INFO  16:26:08,041 - #45 )
INFO  16:26:08,041 - #40 ;
INFO  16:26:08,041 - #5 x
INFO  16:26:08,041 - #37 =
INFO  16:26:08,041 - #5 rows
INFO  16:26:08,041 - #40 ;
INFO  16:26:08,041 - #14 while
INFO  16:26:08,041 - #44 (
INFO  16:26:08,041 - #4 true
INFO  16:26:08,041 - #45 )
INFO  16:26:08,041 - #48 {
INFO  16:26:08,041 - #6 if
INFO  16:26:08,041 - #44 (
INFO  16:26:08,041 - #5 x
INFO  16:26:08,041 - #34 <=
INFO  16:26:08,041 - #2 0
INFO  16:26:08,041 - #45 )
INFO  16:26:08,041 - #9 break
INFO  16:26:08,041 - #40 ;
INFO  16:26:08,041 - #6 if
INFO  16:26:08,041 - #44 (
INFO  16:26:08,041 - #2 0
INFO  16:26:08,042 - #34 <=
INFO  16:26:08,042 - #5 x
INFO  16:26:08,042 - #35 &&
INFO  16:26:08,042 - #5 x
INFO  16:26:08,042 - #33 <
INFO  16:26:08,042 - #5 size
INFO  16:26:08,042 - #45 )
INFO  16:26:08,042 - #48 {
INFO  16:26:08,042 - #5 val
INFO  16:26:08,042 - #43 .
INFO  16:26:08,042 - #5 putp
INFO  16:26:08,042 - #44 (
INFO  16:26:08,042 - #5 val
INFO  16:26:08,042 - #43 .
INFO  16:26:08,042 - #5 getp
INFO  16:26:08,042 - #44 (
INFO  16:26:08,042 - #5 x
INFO  16:26:08,042 - #45 )
INFO  16:26:08,042 - #24 +
INFO  16:26:08,042 - #2 1
INFO  16:26:08,042 - #45 )
INFO  16:26:08,042 - #40 ;
INFO  16:26:08,042 - #49 }
INFO  16:26:08,042 - #7 else
INFO  16:26:08,042 - #6 if
INFO  16:26:08,042 - #44 (
INFO  16:26:08,042 - #25 -
INFO  16:26:08,042 - #5 size
INFO  16:26:08,042 - #33 <
INFO  16:26:08,042 - #5 x
INFO  16:26:08,042 - #35 &&
INFO  16:26:08,042 - #5 x
INFO  16:26:08,042 - #33 <
INFO  16:26:08,042 - #2 0
INFO  16:26:08,042 - #45 )
INFO  16:26:08,042 - #48 {
INFO  16:26:08,042 - #5 val
INFO  16:26:08,042 - #43 .
INFO  16:26:08,042 - #5 putn
INFO  16:26:08,042 - #44 (
INFO  16:26:08,042 - #5 val
INFO  16:26:08,042 - #43 .
INFO  16:26:08,042 - #5 getn
INFO  16:26:08,042 - #44 (
INFO  16:26:08,042 - #25 -
INFO  16:26:08,042 - #5 x
INFO  16:26:08,042 - #45 )
INFO  16:26:08,042 - #24 +
INFO  16:26:08,042 - #2 1
INFO  16:26:08,042 - #45 )
INFO  16:26:08,042 - #40 ;
INFO  16:26:08,042 - #49 }
INFO  16:26:08,042 - #17 read
INFO  16:26:08,042 - #44 (
INFO  16:26:08,042 - #5 x
INFO  16:26:08,042 - #45 )
INFO  16:26:08,042 - #40 ;
INFO  16:26:08,043 - #49 }
INFO  16:26:08,043 - #49 }
INFO  16:26:08,043 - #49 }
ERROR 16:26:08,043 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 59
