INFO  15:31:07,759 - Compiling source file: D:\pp1Projekat\workspace\MJCompiler\test\program.mj
INFO  15:31:07,790 - #8 program
INFO  15:31:07,790 - #5 test302
INFO  15:31:07,790 - #12 const
INFO  15:31:07,791 - #5 int
INFO  15:31:07,791 - #5 jedan
INFO  15:31:07,791 - #36 =
INFO  15:31:07,791 - #2 1
INFO  15:31:07,791 - #39 ;
INFO  15:31:07,792 - #5 int
INFO  15:31:07,792 - #5 i
INFO  15:31:07,792 - #39 ;
INFO  15:31:07,793 - #5 bool
INFO  15:31:07,793 - #5 ibool
INFO  15:31:07,793 - #39 ;
INFO  15:31:07,793 - #5 int
INFO  15:31:07,793 - #5 niz2
INFO  15:31:07,793 - #39 ;
INFO  15:31:07,793 - #5 int
INFO  15:31:07,793 - #5 niz
INFO  15:31:07,793 - #45 [
INFO  15:31:07,793 - #46 ]
INFO  15:31:07,793 - #39 ;
INFO  15:31:07,796 - #5 int
INFO  15:31:07,796 - #5 a
INFO  15:31:07,796 - #41 ,
INFO  15:31:07,796 - #5 curr
INFO  15:31:07,796 - #39 ;
INFO  15:31:07,796 - #47 {
INFO  15:31:07,796 - #5 int
INFO  15:31:07,798 - #5 sum
INFO  15:31:07,799 - #43 (
INFO  15:31:07,799 - #5 int
INFO  15:31:07,799 - #5 z
INFO  15:31:07,799 - #41 ,
INFO  15:31:07,799 - #5 int
INFO  15:31:07,799 - #5 d
INFO  15:31:07,799 - #44 )
INFO  15:31:07,800 - #47 {
INFO  15:31:07,801 - #18 return
INFO  15:31:07,801 - #5 z
INFO  15:31:07,801 - #23 +
INFO  15:31:07,802 - #5 d
INFO  15:31:07,802 - #39 ;
INFO  15:31:07,803 - #48 }
INFO  15:31:07,803 - #5 int
INFO  15:31:07,803 - #5 inkrement
INFO  15:31:07,803 - #43 (
INFO  15:31:07,804 - #5 int
INFO  15:31:07,804 - #5 a
INFO  15:31:07,804 - #41 ,
INFO  15:31:07,804 - #5 int
INFO  15:31:07,804 - #5 inc
INFO  15:31:07,804 - #44 )
INFO  15:31:07,804 - #5 int
INFO  15:31:07,804 - #5 pom
INFO  15:31:07,804 - #39 ;
INFO  15:31:07,804 - #47 {
INFO  15:31:07,804 - #6 if
INFO  15:31:07,806 - #43 (
INFO  15:31:07,806 - #5 inc
INFO  15:31:07,806 - #28 ==
INFO  15:31:07,806 - #5 jedan
INFO  15:31:07,806 - #44 )
INFO  15:31:07,807 - #5 pom
INFO  15:31:07,807 - #36 =
INFO  15:31:07,807 - #2 1
INFO  15:31:07,807 - #39 ;
INFO  15:31:07,808 - #7 else
INFO  15:31:07,809 - #6 if
INFO  15:31:07,809 - #43 (
INFO  15:31:07,809 - #5 inc
INFO  15:31:07,809 - #28 ==
INFO  15:31:07,809 - #2 2
INFO  15:31:07,809 - #44 )
INFO  15:31:07,809 - #5 pom
INFO  15:31:07,809 - #36 =
INFO  15:31:07,809 - #5 a
INFO  15:31:07,809 - #39 ;
INFO  15:31:07,809 - #18 return
INFO  15:31:07,810 - #5 sum
INFO  15:31:07,810 - #43 (
INFO  15:31:07,810 - #5 a
INFO  15:31:07,810 - #41 ,
INFO  15:31:07,810 - #5 pom
INFO  15:31:07,811 - #44 )
INFO  15:31:07,811 - #39 ;
INFO  15:31:07,811 - #48 }
INFO  15:31:07,811 - #5 bool
INFO  15:31:07,811 - #5 verify
INFO  15:31:07,811 - #43 (
INFO  15:31:07,811 - #44 )
INFO  15:31:07,812 - #47 {
INFO  15:31:07,812 - #16 print
INFO  15:31:07,812 - #43 (
INFO  15:31:07,812 - #3 v
INFO  15:31:07,812 - #44 )
INFO  15:31:07,814 - #39 ;
INFO  15:31:07,815 - #18 return
INFO  15:31:07,815 - #4 false
INFO  15:31:07,815 - #39 ;
INFO  15:31:07,815 - #48 }
INFO  15:31:07,815 - #19 void
INFO  15:31:07,815 - #5 main
INFO  15:31:07,815 - #43 (
INFO  15:31:07,815 - #44 )
INFO  15:31:07,815 - #47 {
INFO  15:31:07,815 - #5 niz
INFO  15:31:07,815 - #36 =
INFO  15:31:07,815 - #15 new
INFO  15:31:07,815 - #5 int
INFO  15:31:07,815 - #45 [
INFO  15:31:07,815 - #2 3
INFO  15:31:07,815 - #46 ]
INFO  15:31:07,815 - #16 print
ERROR 15:31:07,815 - 
Sintaksna greska na liniji 39
INFO  15:31:07,815 - #43 (
INFO  15:31:07,815 - #5 len
INFO  15:31:07,815 - #43 (
INFO  15:31:07,816 - #5 niz
INFO  15:31:07,816 - #44 )
INFO  15:31:07,816 - #44 )
INFO  15:31:07,816 - #39 ;
INFO  15:31:07,816 - #48 }
ERROR 15:31:07,816 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 42
